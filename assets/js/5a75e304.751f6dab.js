"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[977],{7522:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(9901);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=o,f=m["".concat(l,".").concat(u)]||m[u]||c[u]||a;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(5402),o=(n(9901),n(7522));const a={sidebar_position:7},i="Viewport",p={unversionedId:"features/viewport",id:"features/viewport",title:"Viewport",description:"By term Viewport, we mean information about current visible part of Web",source:"@site/docs/features/viewport.md",sourceDirName:"features",slug:"/features/viewport",permalink:"/twa/docs/features/viewport",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"sidebar",previous:{title:"Theme",permalink:"/twa/docs/features/theme"},next:{title:"Other",permalink:"/twa/docs/features/other"}},l={},s=[{value:"Mobile",id:"mobile",level:2},{value:"Other platforms",id:"other-platforms",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"viewport"},"Viewport"),(0,o.kt)("p",null,"By term ",(0,o.kt)("em",{parentName:"p"},"Viewport"),", we mean information about current ",(0,o.kt)("strong",{parentName:"p"},"visible part")," of Web\nApp. As long as Web App can be shown differently on platforms, we should use\nviewport information from Telegram to display application correctly."),(0,o.kt)("p",null,"The most important properties here are ",(0,o.kt)("inlineCode",{parentName:"p"},"stability"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"expansion"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"height"),"\nand ",(0,o.kt)("inlineCode",{parentName:"p"},"width"),". We will explain first two of them in the next sections of\ndocumentation, but ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"width")," are worthy of attention right here.\nBy ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"width"),", we mean dimensions of ",(0,o.kt)("strong",{parentName:"p"},"visible part")," of application,\nnot Web View."),(0,o.kt)("h2",{id:"mobile"},"Mobile"),(0,o.kt)("p",null,"In case, application is opened in mobile version of Telegram (both Android and\niOS), it will be displayed in native component, called ",(0,o.kt)("inlineCode",{parentName:"p"},"BottomSheet"),". It\nrepresents draggable from bottom to top block, which could be expanded to the\nentire screen size. To do this, user could drag it to the upper bound of the\nscreen, but developer is able to do it programmatically too."),(0,o.kt)("p",null,"By default, application is minimized (not expanded), it has minimal allowed\nheight. To expand application via code, developer should\ncall ",(0,o.kt)("a",{parentName:"p",href:"../apps-communication/methods#web_app_expand"},(0,o.kt)("inlineCode",{parentName:"a"},"web_app_expand"))," method."),(0,o.kt)("p",null,"During the process of dragging, viewport is considered not stable. For\ndeveloper, it means, that he should not probably do any resizes or something\nlike that, as long as viewport dimensions could change in the next moment."),(0,o.kt)("h2",{id:"other-platforms"},"Other platforms"),(0,o.kt)("p",null,"Other platforms open Web App already maximized in medium-size window and call\nof ",(0,o.kt)("a",{parentName:"p",href:"../apps-communication/methods#web_app_expand"},(0,o.kt)("inlineCode",{parentName:"a"},"web_app_expand"))," method will\nhave no effect."))}c.isMDXComponent=!0}}]);