"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7059],{7522:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var o=t(9901);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?o.createElement(h,a(a({ref:n},c),{},{components:t})):o.createElement(h,a({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var p=2;p<i;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1483:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=t(5402),r=(t(9901),t(7522));const i={sidebar_position:5},a="twa-sdk-react",s={unversionedId:"libraries/twa-sdk-react",id:"libraries/twa-sdk-react",title:"twa-sdk-react",description:"React bindings for client SDK. Contains hooks, components and other",source:"@site/docs/libraries/twa-sdk-react.mdx",sourceDirName:"libraries",slug:"/libraries/twa-sdk-react",permalink:"/twa/docs/libraries/twa-sdk-react",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"sidebar",previous:{title:"WebApp",permalink:"/twa/docs/libraries/twa-sdk/components/web-app"},next:{title:"init-data-golang",permalink:"/twa/docs/libraries/init-data-golang"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Init",id:"init",level:2},{value:"When init is done",id:"when-init-is-done",level:2},{value:"Hooks and HOCs",id:"hooks-and-hocs",level:2},{value:"Theme",id:"theme",level:3},{value:"Other",id:"other",level:3}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},d=c("LibraryBadges"),u=c("NpmInstall"),m={toc:p};function h(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"twa-sdk-react"},"twa-sdk-react"),(0,r.kt)("p",null,"React bindings for ",(0,r.kt)("a",{parentName:"p",href:"twa-sdk/about"},"client SDK"),". Contains hooks, components and other\nuseful tools which allow usage of React along with Web Apps client SDK.\nTracks SDK components changes out of box."),(0,r.kt)(d,{pkg:"twa-sdk-react",mdxType:"LibraryBadges"}),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Before everything, it is assumed, that you already installed ",(0,r.kt)("inlineCode",{parentName:"p"},"react")," package\nas long as this package has it as peer dependency. Installation of SDK itself\nis not required, ",(0,r.kt)("inlineCode",{parentName:"p"},"twa-sdk-react")," already includes it."),(0,r.kt)(u,{pkg:"twa-sdk-react",mdxType:"NpmInstall"}),(0,r.kt)("h2",{id:"init"},"Init"),(0,r.kt)("p",null,"According to SDK documentation, it represents a set of components, which are\nnot initialized by default and developer should create them by himself.\nAdditionally, SDK provides function called ",(0,r.kt)("inlineCode",{parentName:"p"},"init"),' which allows developers\nnot to think about "how do I even should create these components?" and creates\ncomponents by itself.'),(0,r.kt)("p",null,"So, as you could think, the first thing we have to do is to provide application\nSDK functionality and allow it calling initialization to get newly\ncreated components. For this purpose, component ",(0,r.kt)("inlineCode",{parentName:"p"},"SDKProvider")," exist:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import React from 'react';\nimport {SDKProvider} from 'twa-sdk-react';\n\nfunction Root() {\n  return (\n    <SDKProvider>\n      <div>My application!</div>\n    </SDKProvider>\n  );\n}\n")),(0,r.kt)("p",null,"Internally, ",(0,r.kt)("inlineCode",{parentName:"p"},"SDKProvider")," uses ",(0,r.kt)("inlineCode",{parentName:"p"},"init")," function from ",(0,r.kt)("inlineCode",{parentName:"p"},"twa-sdk"),". It accepts\nlist of optional parameters described ",(0,r.kt)("a",{parentName:"p",href:"twa-sdk/about#init"},"here"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import React from 'react';\nimport {InitOptions} from 'twa-sdk';\nimport {SDKProvider} from 'twa-sdk-react';\n\nfunction Root() {\n  const options: InitOptions = {\n    props: {\n      bridge: {debug: true},\n      backButton: {isVisible: true},\n      // ...\n      webApp: {platform: 'tdesktop', backgroundColor: '#FF0233', ...}\n    }\n  };\n\n  return (\n    <SDKProvider initOptions={options}>\n      <div>My application!</div>\n    </SDKProvider>\n  );\n}\n")),(0,r.kt)("p",null,"In production, there is no need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"initOptions")," unless you have some\nspecific logic in your application. Usually, SDK does everything developer\nneeds by itself."),(0,r.kt)("p",null,"Insertion of ",(0,r.kt)("inlineCode",{parentName:"p"},"SDKProvider")," component allows its child elements to use hook\n",(0,r.kt)("inlineCode",{parentName:"p"},"useSDK")," returning core SDK information:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import React from 'react';\nimport {SDKProvider, useSDK} from 'twa-sdk-react';\n\nfunction App() {\n  const sdk = useSDK();\n\n  // Here, we can use SDK information.\n\n  return <div>My application!</div>;\n}\n\nfunction Root() {\n  return (\n    <SDKProvider>\n      <App/>\n    </SDKProvider>\n  );\n}\n")),(0,r.kt)("p",null,"Let's complicate previous example and add important logic connected with SDK\nlifecycle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import React, {PropsWithChildren, useEffect} from 'react';\nimport {SDKProvider, useSDK, useBackButton, useWebApp} from 'twa-sdk-react';\n\n/**\n * Part of application which is free of using SDK components.\n */\nfunction App() {\n  const backButton = useBackButton();\n  const webApp = useWebApp();\n\n  // When App is attached to DOM, lets show back button and\n  // add click event handler, which will close application.\n  useEffect(() => {\n    const listener = () => webApp.close();\n    backButton.on('click', listener);\n    backButton.show();\n\n    return () => {\n      backButton.off('click', listener);\n      backButton.hide();\n    };\n    // We know, that backButton and webApp will never change,\n    // but let's follow React rules.\n  }, [backButton, webApp]);\n\n  return <div>My application!</div>;\n}\n\n/**\n * This component controls render of important part of application\n * which uses hooks, returning SDK components.\n */\nfunction Loader({children}: PropsWithChildren) {\n  const {didInit, components, error} = useSDK();\n\n  // There were no calls of SDK's init function. It means, we did not\n  // even try to do it.\n  if (!didInit) {\n    return <div>SDK init function is not yet called.</div>;\n  }\n\n  // Error occurred during SDK init.\n  if (error !== null) {\n    return <div>Something went wrong.</div>;\n  }\n\n  // If components is null, it means, SDK is not ready at the\n  // moment and currently initializing. Usually, it takes like\n  // several milliseconds or something like that, but we should\n  // have this check.\n  if (components === null) {\n    return <div>Warming up SDK.</div>;\n  }\n\n  // Safely render application.\n  return <>{children}</>;\n}\n\n/**\n * Root component of the whole project.\n */\nexport function Root() {\n  return (\n    <SDKProvider>\n      <Loader>\n        <App/>\n      </Loader>\n    </SDKProvider>\n  );\n}\n")),(0,r.kt)("p",null,"You could probably ask why we should use component like ",(0,r.kt)("inlineCode",{parentName:"p"},"Loader"),". The problem\nis, as long as SDK initialization is asynchronous (some of its components should\nsend requests to native app), we could not determine which properties its\ncomponents should have. That is the reason, why ",(0,r.kt)("inlineCode",{parentName:"p"},"SDKProvider")," can not provide\nvalid ",(0,r.kt)("inlineCode",{parentName:"p"},"components")," property until initialization is completed."),(0,r.kt)("p",null,"As a result, all hooks which return component instances will throw an error\nas long as they could not get their component from ",(0,r.kt)("inlineCode",{parentName:"p"},"components")," property. That\nis the reason, why these hooks should not be called until SDK is initialized."),(0,r.kt)("h2",{id:"when-init-is-done"},"When init is done"),(0,r.kt)("p",null,"When initialization was completed successfully, do not forget to\ncall ",(0,r.kt)("inlineCode",{parentName:"p"},"webApp.ready")," function. This will notify native application about current\nWeb App is ready to be displayed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import {useWebApp} from 'twa-sdk-react';\nimport React, {useEffect} from 'react';\n\nfunction App() {\n  const webApp = useWebApp();\n\n  useEffect(() => {\n    webApp.ready();\n  }, [webApp]);\n\n  return <div>Here is my App</div>;\n}\n")),(0,r.kt)("h2",{id:"hooks-and-hocs"},"Hooks and HOCs"),(0,r.kt)("h3",{id:"theme"},"Theme"),(0,r.kt)("p",null,"There are some cases, when it is required to use theme parameters information\neven when SDK is not ready yet. For example, you would probably want to\nknow theme colors to render app loader with appropriate colors."),(0,r.kt)("p",null,"For this purpose, hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useThemeFromLocation")," is used:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import {useThemeFromLocation} from 'twa-sdk-react';\nimport React, {useEffect} from 'react';\n\nfunction App() {\n  const theme = useThemeFromLocation();\n\n  return <div>Background color: {theme.backgroundColor}</div>;\n}\n")),(0,r.kt)("p",null,"Internally, this hook uses ",(0,r.kt)("inlineCode",{parentName:"p"},"twa-theme-params"),"s package ",(0,r.kt)("inlineCode",{parentName:"p"},"extractFromLocation"),"\nfunction, which extracts theme information from current window location."),(0,r.kt)("h3",{id:"other"},"Other"),(0,r.kt)("p",null,"Library provides list of dead simple hooks and HOCs for each SDK component.\nReturned instances are always the same, but force updates will be called\nin case, something changed in component."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"WARNING"),": In case, you use HOCs, pay attention to the fact, passed\ncomponents are always the same instances. This may lead to problems with\n",(0,r.kt)("inlineCode",{parentName:"p"},"PureComponent"),"s as long as they will not see any changes in references.\nDo not create new components instances as long as it will lead to new\nproblems connected with events listening done during SDK initialization\nprocess.")))}h.isMDXComponent=!0}}]);