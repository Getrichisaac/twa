"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6626],{7522:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(9901);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,p=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,b=u["".concat(l,".").concat(m)]||u[m]||c[m]||p;return n?a.createElement(b,i(i({ref:t},d),{},{components:n})):a.createElement(b,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=n.length,i=new Array(p);i[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,i[1]=r;for(var s=2;s<p;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7653:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>p,metadata:()=>r,toc:()=>s});var a=n(5402),o=(n(9901),n(7522));const p={sidebar_position:2,toc_max_heading_level:4},i="Methods",r={unversionedId:"apps-communication/methods",id:"apps-communication/methods",title:"Methods",description:"Web Apps methods are events, which execute some action. They are always called",source:"@site/docs/apps-communication/methods.mdx",sourceDirName:"apps-communication",slug:"/apps-communication/methods",permalink:"/twa/docs/apps-communication/methods",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,toc_max_heading_level:4},sidebar:"sidebar",previous:{title:"About",permalink:"/twa/docs/apps-communication/about"},next:{title:"Events",permalink:"/twa/docs/apps-communication/events"}},l={},s=[{value:"Web",id:"web",level:2},{value:"Desktop and mobile",id:"desktop-and-mobile",level:2},{value:"Windows Phone",id:"windows-phone",level:2},{value:"Available methods",id:"available-methods",level:2},{value:"v6.0",id:"v60",level:3},{value:"<code>iframe_ready</code>",id:"iframe_ready",level:4},{value:"<code>web_app_close</code>",id:"web_app_close",level:4},{value:"<code>web_app_data_send</code>",id:"web_app_data_send",level:4},{value:"<code>web_app_expand</code>",id:"web_app_expand",level:4},{value:"<code>web_app_open_link</code>",id:"web_app_open_link",level:4},{value:"<code>web_app_ready</code>",id:"web_app_ready",level:4},{value:"<code>web_app_request_theme</code>",id:"web_app_request_theme",level:4},{value:"<code>web_app_request_viewport</code>",id:"web_app_request_viewport",level:4},{value:"<code>web_app_setup_main_button</code>",id:"web_app_setup_main_button",level:4},{value:"<code>web_app_setup_closing_behavior</code>",id:"web_app_setup_closing_behavior",level:4},{value:"v6.1",id:"v61",level:3},{value:"<code>web_app_open_tg_link</code>",id:"web_app_open_tg_link",level:4},{value:"<code>web_app_open_invoice</code>",id:"web_app_open_invoice",level:4},{value:"<code>web_app_setup_back_button</code>",id:"web_app_setup_back_button",level:4},{value:"<code>web_app_set_background_color</code>",id:"web_app_set_background_color",level:4},{value:"<code>web_app_set_header_color</code>",id:"web_app_set_header_color",level:4},{value:"<code>web_app_trigger_haptic_feedback</code>",id:"web_app_trigger_haptic_feedback",level:4},{value:"v6.2",id:"v62",level:3},{value:"<code>web_app_open_popup</code>",id:"web_app_open_popup",level:4}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"methods"},"Methods"),(0,o.kt)("p",null,"Web Apps methods are events, which execute some action. They are always called\nby Web App."),(0,o.kt)("h2",{id:"web"},"Web"),(0,o.kt)("p",null,"As long as web version of Telegram displays front-end application in ",(0,o.kt)("inlineCode",{parentName:"p"},"<iframe/>"),"\ntag, it uses default way of communication between 2 iframes - sending messages\nthrough ",(0,o.kt)("inlineCode",{parentName:"p"},"window.parent.postMessage")," function."),(0,o.kt)("p",null,"As the first parameter, you should pass JSON object ",(0,o.kt)("strong",{parentName:"p"},"converted to string"),".\nObject should have this interface:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface MessageJSON {\n  eventType: string;\n  eventData: any;\n}\n")),(0,o.kt)("p",null,"The second parameter is ",(0,o.kt)("inlineCode",{parentName:"p"},"targetOrigin")," - allowed parent iframe origin. We\nrecommend avoiding usage of wildcard ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," as long as it is not secure - your\napplication could be inserted not by Telegram, but other iframe which will still\nable to communicate with your app and receive some data."),(0,o.kt)("p",null,"As default value, you could use ",(0,o.kt)("inlineCode",{parentName:"p"},"https://web.telegram.org"),"."),(0,o.kt)("p",null,"So, as you see, each method has its own name expressed by ",(0,o.kt)("inlineCode",{parentName:"p"},"eventType"),"\nand parameters stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"eventData")," property. Here is the usage example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"window.parent.postMessage(JSON.stringify({\n  eventType: 'web_app_setup_back_button',\n  eventData: {is_visible: true},\n}), 'https://web.telegram.org');\n")),(0,o.kt)("p",null,"This code will make Telegram back button appear. We will define back button and\nother components in the next sections of documentation."),(0,o.kt)("h2",{id:"desktop-and-mobile"},"Desktop and mobile"),(0,o.kt)("p",null,"Unlike web, desktop and mobile applications use a bit more unusual way of\ncalling methods. Both of these platforms will create global function\n",(0,o.kt)("inlineCode",{parentName:"p"},"window.TelegramWebviewProxy.postEvent(eventType: string, eventData: string)"),"\n."),(0,o.kt)("p",null,"As the first argument, this function accepts event name. The second one -\nparameters object, converted to string. Here is how it works:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"window.TelegramWebviewProxy.postEvent('web_app_setup_back_button', JSON.stringify({\n  is_visible: true\n}));\n")),(0,o.kt)("h2",{id:"windows-phone"},"Windows Phone"),(0,o.kt)("p",null,"Telegram Windows Phone app provides such function as\n",(0,o.kt)("inlineCode",{parentName:"p"},"window.external.notify(message: string)"),". It accepts the same parameter as web\nversion does:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"window.external.notify(JSON.stringify({\n  eventType: 'web_app_setup_back_button',\n  eventData: {is_visible: true},\n}))\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This method is probably not used by Telegram already, but we still should\ndescribe how it works in legacy version of Telegram Windows Phone.")),(0,o.kt)("h2",{id:"available-methods"},"Available methods"),(0,o.kt)("p",null,"This section contains list of available methods to call with their names,\ndescription and parameters. Section title means minimal Web App version to call\nmethods inside it."),(0,o.kt)("p",null,"In case, Web App does not satisfy minimal method version requirement, nothing\nwill happen. Native app just doesn't know which method should be called as long\nas it is not defined."),(0,o.kt)("h3",{id:"v60"},"v6.0"),(0,o.kt)("h4",{id:"iframe_ready"},(0,o.kt)("inlineCode",{parentName:"h4"},"iframe_ready")),(0,o.kt)("p",null,"Notifies parent iframe about current frame is ready. This method is only used in\nWeb version of Telegram. As a result, Web App will receive\n",(0,o.kt)("a",{parentName:"p",href:"events#set_custom_style"},(0,o.kt)("inlineCode",{parentName:"a"},"set_custom_style"))," event."),(0,o.kt)("h4",{id:"web_app_close"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_close")),(0,o.kt)("p",null,"Closes Web App."),(0,o.kt)("h4",{id:"web_app_data_send"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_data_send")),(0,o.kt)("p",null,"Sends data to bot. When this method called, a service message sent to the bot\ncontaining the data of the length up to 4096 bytes. Then, Web App will be\nclosed."),(0,o.kt)("p",null,"To get more information, take a look at ",(0,o.kt)("inlineCode",{parentName:"p"},"web_app_data")," field in the\nclass ",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots/api#message"},(0,o.kt)("inlineCode",{parentName:"a"},"Message")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = { data: string };\n")),(0,o.kt)("h4",{id:"web_app_expand"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_expand")),(0,o.kt)("p",null,"Expands Web App. More information about expansion ",(0,o.kt)("a",{parentName:"p",href:"../features/viewport"},"here"),"."),(0,o.kt)("h4",{id:"web_app_open_link"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_open_link")),(0,o.kt)("p",null,"Opens link in default browser. Web App will not be closed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = { url: string };\n")),(0,o.kt)("h4",{id:"web_app_ready"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_ready")),(0,o.kt)("p",null,"Notifies Telegram about current application is ready to be shown. This method\nwill make Telegram to remove application loader and display Web App."),(0,o.kt)("h4",{id:"web_app_request_theme"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_request_theme")),(0,o.kt)("p",null,"Requests current ",(0,o.kt)("a",{parentName:"p",href:"../features/theme"},"theme")," from Telegram. As a result, Telegram\nwill emit ",(0,o.kt)("a",{parentName:"p",href:"events#theme_changed"},(0,o.kt)("inlineCode",{parentName:"a"},"theme_changed"))," event."),(0,o.kt)("h4",{id:"web_app_request_viewport"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_request_viewport")),(0,o.kt)("p",null,"Requests current ",(0,o.kt)("a",{parentName:"p",href:"../features/viewport"},"viewport")," information from Telegram. As\na result, Telegram will emit ",(0,o.kt)("a",{parentName:"p",href:"events#viewport_changed"},(0,o.kt)("inlineCode",{parentName:"a"},"viewport_changed")),"\nevent."),(0,o.kt)("h4",{id:"web_app_setup_main_button"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_setup_main_button")),(0,o.kt)("p",null,"Updates ",(0,o.kt)("a",{parentName:"p",href:"../features/main-button"},"main button")," settings."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = {\n  // Should button be displayed.\n  is_visible?: boolean;\n  // Should button be enabled.\n  is_active?: boolean;\n  // Should loader inside button be displayed. Use this property in case,\n  // some opertaion takes time. This loader will make user notified about it.\n  is_progress_visible?: boolean;\n  // Text inside button.\n  text?: string;\n  // Color in #RRGGBB format.\n  color?: string;\n  // Text color in #RRGGBB format.\n  text_color?: string;\n};\n")),(0,o.kt)("h4",{id:"web_app_setup_closing_behavior"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_setup_closing_behavior")),(0,o.kt)("p",null,"Changes current ",(0,o.kt)("a",{parentName:"p",href:"../features/closing-behavior"},"closing behavior"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = { need_confirmation: boolean };\n")),(0,o.kt)("h3",{id:"v61"},"v6.1"),(0,o.kt)("h4",{id:"web_app_open_tg_link"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_open_tg_link")),(0,o.kt)("p",null,"Opens link which in format like ",(0,o.kt)("inlineCode",{parentName:"p"},"https://t.me/*"),". Link will be opened in\nTelegram app, Web App will be closed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = { path_full: string };\n")),(0,o.kt)("h4",{id:"web_app_open_invoice"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_open_invoice")),(0,o.kt)("p",null,"Opens invoice by its specified slug."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = { slug: string };\n")),(0,o.kt)("h4",{id:"web_app_setup_back_button"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_setup_back_button")),(0,o.kt)("p",null,"Updates ",(0,o.kt)("a",{parentName:"p",href:"../features/back-button"},"back button")," settings."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = { is_visible: boolean };\n")),(0,o.kt)("h4",{id:"web_app_set_background_color"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_set_background_color")),(0,o.kt)("p",null,"Updates Web\nApp ",(0,o.kt)("a",{parentName:"p",href:"../features/theme#background-and-header-colors"},"background color"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = {\n  // Color in #RRGGBB format.\n  color: string;\n};\n")),(0,o.kt)("h4",{id:"web_app_set_header_color"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_set_header_color")),(0,o.kt)("p",null,"Updates Web App ",(0,o.kt)("a",{parentName:"p",href:"../features/theme#background-and-header-colors"},"header color"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = { color_key: 'bg_color' | 'secondary_bg_color' };\n")),(0,o.kt)("h4",{id:"web_app_trigger_haptic_feedback"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_trigger_haptic_feedback")),(0,o.kt)("p",null,"Generates ",(0,o.kt)("a",{parentName:"p",href:"../features/haptic-feedback"},"haptic feedback")," event."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type Parameters = {\n  type: 'impact',\n  /**\n   * Style of impact occurred haptic event.\n   * - `light`, indicates a collision between small or lightweight UI objects,\n   * - `medium`, indicates a collision between medium-sized or medium-weight UI objects,\n   * - `heavy`, indicates a collision between large or heavyweight UI objects,\n   * - `rigid`, indicates a collision between hard or inflexible UI objects,\n   * - `soft`, indicates a collision between soft or flexible UI objects.\n   */\n  impact_style: 'light' | 'medium' | 'heavy' | 'rigid' | 'soft',\n} | {\n  type: 'notification',\n  /**\n   * Type of notification occurred type event.\n   * - `error`, indicates that a task or action has failed,\n   * - `success`, indicates that a task or action has completed successfully,\n   * - `warning`, indicates that a task or action produced a warning.\n   */\n  notification_type: 'error' | 'success' | 'warning'\n} | {\n  type: 'selection_change'\n};\n")),(0,o.kt)("h3",{id:"v62"},"v6.2"),(0,o.kt)("h4",{id:"web_app_open_popup"},(0,o.kt)("inlineCode",{parentName:"h4"},"web_app_open_popup")),(0,o.kt)("p",null,"Opens new ",(0,o.kt)("a",{parentName:"p",href:"../features/popup"},"popup"),". When user closes popup, Telegram\nemits ",(0,o.kt)("a",{parentName:"p",href:"events#popup_closed"},(0,o.kt)("inlineCode",{parentName:"a"},"popup_closed"))," event."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'type PopupButton = {\n  /**\n   * Identifier of the button, 0-64 characters.\n   */\n  id: string;\n} & (\n  {\n    /**\n     * Type of the button:\n     * - `default`, a button with the default style;\n     * - `destructive`, a button with a style that indicates a destructive\n     * action (e.g. "Remove", "Delete", etc.).\n     *\n     * @default "default"\n     */\n    type?: \'default\' | \'destructive\';\n\n    /**\n     * The text to be displayed on the button, 0-64 characters.\n     */\n    text: string;\n  } | {\n  /**\n   * Type of the button:\n   * - `ok`, a button with the localized text "OK";\n   * - `close`, a button with the localized text "Close";\n   * - `cancel`, a button with the localized text "Cancel".\n   */\n  type: \'ok\' | \'close\' | \'cancel\';\n});\n\ntype Parameters = {\n  /**\n   * The text to be displayed in the popup title, 0-64 characters.\n   */\n  title: string;\n  /**\n   * The message to be displayed in the body of the popup, 1-256 characters.\n   */\n  message: string;\n  /**\n   * List of buttons to be displayed in the popup, 1-3 buttons.\n   */\n  buttons: PopupButton[];\n};\n')))}c.isMDXComponent=!0}}]);