"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[363],{7522:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var r=a(9901);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return a?r.createElement(h,i(i({ref:t},c),{},{components:a})):r.createElement(h,i({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5965:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(5402),n=(a(9901),a(7522));const o={sidebar_position:3},i="twa-theme-params",l={unversionedId:"libraries/twa-theme-params",id:"libraries/twa-theme-params",title:"twa-theme-params",description:"Web Apps theme parameters contain rather important information to follow visual",source:"@site/docs/libraries/twa-theme-params.mdx",sourceDirName:"libraries",slug:"/libraries/twa-theme-params",permalink:"/twa/docs/libraries/twa-theme-params",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"sidebar",previous:{title:"twa-init-data",permalink:"/twa/docs/libraries/twa-init-data"},next:{title:"twa-sdk",permalink:"/twa/docs/category/twa-sdk"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Motivation",id:"motivation",level:2},{value:"CSS variables",id:"css-variables",level:2},{value:"Programmatic control",id:"programmatic-control",level:2},{value:"Extracting from JSON",id:"extracting-from-json",level:3},{value:"Extracting from current window location",id:"extracting-from-current-window-location",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},m=c("LibraryBadges"),d=c("NpmInstall"),u={toc:p};function h(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"twa-theme-params"},"twa-theme-params"),(0,n.kt)("p",null,"Web Apps theme parameters contain rather important information to follow visual\nconsistency of client application with native one. It provides developer\ninformation about which colors are currently used by native application and\nexpects developer to use them."),(0,n.kt)(m,{pkg:"twa-theme-params",mdxType:"LibraryBadges"}),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)(d,{pkg:"twa-theme-params",mdxType:"NpmInstall"}),(0,n.kt)("h2",{id:"motivation"},"Motivation"),(0,n.kt)("p",null,"As long as it is important to create applications which look native, developers\nhave to watch for current theme parameters and their changes."),(0,n.kt)("p",null,'Moreover, user will have better experience in case, when application is loading\nwithout "flashes", which usually occur due to on-flight color changes. That\'s\nwhy this library should provide theme information even when application script\nis still not loaded.'),(0,n.kt)("h2",{id:"css-variables"},"CSS variables"),(0,n.kt)("p",null,"It is important to display application with colors already known. The only one\neasy way of getting theme colors before application is displayed, is to get them\nfrom current window's location."),(0,n.kt)("p",null,"To do this, we should create script and place it in ",(0,n.kt)("inlineCode",{parentName:"p"},"head")," section of document\nwhich will extract required parameters. Otherwise, due to some specific problems\nin platform (",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Telegram-Web-Apps/twa/issues/12"},"issue"),')\n, application will "flash".'),(0,n.kt)("p",null,"Thanks to this library, it already has script ready to use. To make\neverything work, just add ",(0,n.kt)("inlineCode",{parentName:"p"},"script")," tag with ",(0,n.kt)("inlineCode",{parentName:"p"},"src")," attribute as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'\n<html>\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n    <script src="https://cdn.jsdelivr.net/npm/twa-theme-params/dist/preload.js"><\/script>\n</head>\n<body>\n</body>\n')),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"It is recommended to specify version of ",(0,n.kt)("inlineCode",{parentName:"p"},"twa-theme-params")," to make sure,\nnothing will break in case library updated. For example, you could use\nsuch URL as ",(0,n.kt)("a",{parentName:"p",href:"https://cdn.jsdelivr.net/npm/twa-theme-params@0.0.11/dist/preload.js"},"https://cdn.jsdelivr.net/npm/twa-theme-params@0.0.11/dist/preload.js"))),(0,n.kt)("p",null,"As a result, a set of CSS variables will be ready to use even when ",(0,n.kt)("inlineCode",{parentName:"p"},"body")," is not\nloaded. It means, you could display your application with already known colors\nand use these colors in you CSS files."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Telegram-Web-Apps/twa/blob/master/packages/theme-params/src/preload/utils.ts"},"Script source")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Telegram-Web-Apps/twa/blob/master/packages/theme-params/preview.html"},"Usage example"))),(0,n.kt)("h2",{id:"programmatic-control"},"Programmatic control"),(0,n.kt)("h3",{id:"extracting-from-json"},"Extracting from JSON"),(0,n.kt)("p",null,"This library contains such useful function as ",(0,n.kt)("inlineCode",{parentName:"p"},"extractThemeFromJson"),". It accepts\nJSON object or its string representation and\nreturns ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Telegram-Web-Apps/twa/blob/master/packages/theme-params/src/types.ts#L7"},"ThemeParams"),"\ninterface with already prepared and known colors."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import {extractThemeFromJson} from 'twa-theme-params';\n\n// Extract parameter, responsible for application theme parameters.\nconst tp = new URLSearchParams(window.location.hash.slice(1))\n  .get('tgWebAppThemeParams');\n\n// Extract required colors.\nconsole.log(extractThemeFromJson(tp));\n\n// Output:\n// {\n//   backgroundColor: '#17212b',\n//   buttonColor: '#5288c1',\n//   buttonTextColor: '#ffffff',\n//   hintColor: '#708499',\n//   linkColor: '#6ab3f3',\n//   secondaryBackgroundColor: '#232e3c',\n//   textColor: '#f5f5f5',\n// }\n")),(0,n.kt)("h3",{id:"extracting-from-current-window-location"},"Extracting from current window location"),(0,n.kt)("p",null,"As long as Telegram specifies theme information in window location hash, we\ncould extract theme directly from it:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import {extractThemeFromLocation} from 'twa-theme-params';\n\n// Extract required colors.\nconsole.log(extractThemeFromLocation());\n\n// Output:\n// {\n//   backgroundColor: '#17212b',\n//   buttonColor: '#5288c1',\n//   buttonTextColor: '#ffffff',\n//   hintColor: '#708499',\n//   linkColor: '#6ab3f3',\n//   secondaryBackgroundColor: '#232e3c',\n//   textColor: '#f5f5f5',\n// }\n")))}h.isMDXComponent=!0}}]);