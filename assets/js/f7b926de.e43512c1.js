"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[280],{7522:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(9901);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?o.createElement(k,r(r({ref:t},c),{},{components:n})):o.createElement(k,r({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9581:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>k,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=n(5402),a=(n(9901),n(7522));const i={sidebar_position:1,sidebar_label:"About"},r="@twa.js/sdk",s={unversionedId:"libraries/twa-sdk/about",id:"libraries/twa-sdk/about",title:"@twa.js/sdk",description:"Made from scratch TypeScript library for communication with Telegram Web Apps",source:"@site/docs/libraries/twa-sdk/about.mdx",sourceDirName:"libraries/twa-sdk",slug:"/libraries/twa-sdk/about",permalink:"/twa/docs/libraries/twa-sdk/about",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"About"},sidebar:"sidebar",previous:{title:"@twa.js/sdk-react",permalink:"/twa/docs/libraries/twa-sdk-react"},next:{title:"BackButton",permalink:"/twa/docs/libraries/twa-sdk/components/back-button"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Init",id:"init",level:2},{value:"Options",id:"options",level:3},{value:"<code>debug: boolean</code>",id:"debug-boolean",level:4},{value:"<code>checkCompat: boolean</code>",id:"checkcompat-boolean",level:4},{value:"<code>targetOrigin: string</code>",id:"targetorigin-string",level:4},{value:"Components",id:"components",level:2},{value:"Events",id:"events",level:3},{value:"Methods support",id:"methods-support",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=c("LibraryBadges"),u=c("NpmInstall"),m={toc:p};function k(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"twajssdk"},"@twa.js/sdk"),(0,a.kt)("p",null,"Made from scratch TypeScript library for communication with Telegram Web Apps\nfunctionality."),(0,a.kt)("p",null,"Code of this library was written with aim to make developers communication with\nTelegram Web Apps way easier. It contains a lot of separate components which are\nresponsible for their own part of Telegram Web Apps ecosystem."),(0,a.kt)("p",null,"Before starting to use SDK, we highly recommend learning Web Apps\n",(0,a.kt)("a",{parentName:"p",href:"../../introduction/web-apps"},"documentation")," to understand platform concepts."),(0,a.kt)(d,{pkg:"@twa.js/sdk",mdxType:"LibraryBadges"}),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)(u,{pkg:"@twa.js/sdk",mdxType:"NpmInstall"}),(0,a.kt)("h2",{id:"init"},"Init"),(0,a.kt)("p",null,"According to logic, this package provides full control over its lifecycle,\nits initialization is on developer's shoulders. It means, that there are no\nalready initialized global components which could be used by developer, they\nshould be created by him."),(0,a.kt)("p",null,"To make developers life easier, package contains special function called ",(0,a.kt)("inlineCode",{parentName:"p"},"init"),",\nwhich returns initialized components instances:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {init} from '@twa.js/sdk';\n\ninit().then(components => {\n  // Now we have all initialized components.\n  const {mainButton, viewport} = components;\n\n  // Add main button event click which will lead to\n  // application expansion.\n  mainButton.on('click', () => viewport.expand());\n\n  // Update main button information and show it.\n  mainButton\n    .setColor('#ff0000')\n    .setTextColor('#ffffff')\n    .setText('Expand')\n    .enable()\n    .show()\n    .commit();\n});\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("h4",{id:"debug-boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"debug: boolean")),(0,a.kt)("p",null,"Enables debug mode which leads to more debugging information sent by SDK:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"init({debug: true});\n")),(0,a.kt)("h4",{id:"checkcompat-boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"checkCompat: boolean")),(0,a.kt)("p",null,"Enables mode in which calls of methods not supported by current version\nof Web App will lead to thrown errors. This mode is recommended to be used\nand enabled by default."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"init({checkCompat: true});\n")),(0,a.kt)("h4",{id:"targetorigin-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"targetOrigin: string")),(0,a.kt)("p",null,"This option is directly passed to ",(0,a.kt)("inlineCode",{parentName:"p"},"Bridge")," during its initialization. It\nrestricts lists of parent iframes allowed to receive data from current\napplication."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"init({targetOrigin: 'https://web.telegram.org'});\n")),(0,a.kt)("h2",{id:"components"},"Components"),(0,a.kt)("p",null,"All components in this package are supposed to be used as singletons. It means,\nyou should not create several instances of same component and use them even\nif it is not forbidden. But in this case, there is no warranty, everything\nwill work fine."),(0,a.kt)("p",null,"The reason is, each component class stores its state locally and class instances\nare not synchronized between each other. So, for example, in case, you create\n2 instances of ",(0,a.kt)("inlineCode",{parentName:"p"},"Popup")," component and one of them calls ",(0,a.kt)("inlineCode",{parentName:"p"},"open()")," method, it\nwill change its ",(0,a.kt)("inlineCode",{parentName:"p"},"isOpened")," property to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", but the second instance\nof ",(0,a.kt)("inlineCode",{parentName:"p"},"Popup")," will not know about it and will still return ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," value."),(0,a.kt)("p",null,"To avoid possible problems, you can rely on package's ",(0,a.kt)("inlineCode",{parentName:"p"},"init")," function which\nprovides initialized components which are enough to use across application."),(0,a.kt)("h3",{id:"events"},"Events"),(0,a.kt)("p",null,"Component instances use common way of events listening through ",(0,a.kt)("inlineCode",{parentName:"p"},"on")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"off"),"\nfunctions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const listener = (...args) => {\n  console.log(...args);\n};\ncomponent.on(event, listener); // add listener.\ncomponent.off(event, listener); // remove listener.\n")),(0,a.kt)("p",null,"Example with ",(0,a.kt)("inlineCode",{parentName:"p"},"BackButton")," component:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {BackButton} from '@twa.js/sdk';\n\nconst backButton = new BackButton();\nbackButton.on('click', () => {\n  console.log('Back button clicked.');\n});\n")),(0,a.kt)("p",null,"You can find list of supported events in components own documentations."),(0,a.kt)("h3",{id:"methods-support"},"Methods support"),(0,a.kt)("p",null,"Almost each component is capable of checking whether its method is supported by\ncurrent Web App version or not. To check if some methods are supported, you\nshould use ",(0,a.kt)("inlineCode",{parentName:"p"},"{Component}.supports()")," function. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {BackButton} from '@twa.js/sdk';\nimport {init} from '@twa.js/bridge';\n\nlet backButton = new BackButton(init(), '6.0');\nconsole.log(backButton.supports('show')); // false\n\nbackButton = new BackButton(init(), '6.3');\nconsole.log(backButton.supports('hide')); // true\n")),(0,a.kt)("p",null,"It is recommended to use this functionality before calling some component method\nas long as this will make you sure, it will work."),(0,a.kt)("p",null,"List of supported methods by components is described in each component's\ndocumentation."))}k.isMDXComponent=!0}}]);