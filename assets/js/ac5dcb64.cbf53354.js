"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5610],{7522:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(9901);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,b=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(b,l(l({ref:t},p),{},{components:n})):o.createElement(b,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:i,l[1]=r;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8449:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var o=n(5402),i=(n(9901),n(7522));const a={},l="MainButton",r={unversionedId:"libraries/twa-sdk/components/main-button",id:"libraries/twa-sdk/components/main-button",title:"MainButton",description:"Controls the main button, which is displayed at the bottom of the Web App in the",source:"@site/docs/libraries/twa-sdk/components/main-button.md",sourceDirName:"libraries/twa-sdk/components",slug:"/libraries/twa-sdk/components/main-button",permalink:"/twa/docs/libraries/twa-sdk/components/main-button",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Layout",permalink:"/twa/docs/libraries/twa-sdk/components/layout"},next:{title:"Popup",permalink:"/twa/docs/libraries/twa-sdk/components/popup"}},s={},c=[{value:"Init",id:"init",level:2},{value:"Committing changes",id:"committing-changes",level:2},{value:"Controlling visibility",id:"controlling-visibility",level:2},{value:"Displaying loader",id:"displaying-loader",level:2},{value:"Colors",id:"colors",level:2},{value:"<code>color</code> / <code>setColor(color: RGB)</code>",id:"color--setcolorcolor-rgb",level:3},{value:"<code>textColor</code> / <code>setTextColor(color: RGB)</code>",id:"textcolor--settextcolorcolor-rgb",level:3},{value:"Enable state",id:"enable-state",level:2},{value:"Events",id:"events",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mainbutton"},(0,i.kt)("inlineCode",{parentName:"h1"},"MainButton")),(0,i.kt)("p",null,"Controls the main button, which is displayed at the bottom of the Web App in the\nTelegram interface."),(0,i.kt)("p",null,"To learn more, visit description of this feature\nin ",(0,i.kt)("a",{parentName:"p",href:"../../../features/main-button"},"documentation"),"."),(0,i.kt)("h2",{id:"init"},"Init"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import {BackButton} from '@twa.js/sdk';\nimport {init} from '@twa.js/bridge';\n\n// Specify bridge instance, color and text colors.\nconst mainButton = new MainButton(init(), '#000000', '#ffffff');\n")),(0,i.kt)("h2",{id:"committing-changes"},"Committing changes"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," instance automatically applies changes, done\nby setters, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"setText"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"show")," etc. This behavior could be change by\nusing ",(0,i.kt)("inlineCode",{parentName:"p"},"autocommit")," constructor property:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const mainButton = new MainButton(init(), '#000000', '#ffffff', {\n  autocommit: false,\n});\n")),(0,i.kt)("p",null,"In this case, to apply locally done changes, you have to call ",(0,i.kt)("inlineCode",{parentName:"p"},"commit()"),"\nfunction:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.setText('Submit').show().commit();\n")),(0,i.kt)("p",null,"This code will change main button text to ",(0,i.kt)("inlineCode",{parentName:"p"},"Submit"),", make it visible\nand commit changes. We use commit function to prevent unexpected visual changes\nto be sent while just updating main button props locally."),(0,i.kt)("h2",{id:"controlling-visibility"},"Controlling visibility"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Show main button.  \nmainButton.show();  \nconsole.log(mainButton.isVisible); // true  \n  \n// Hide main button.  \nmainButton.hide();  \nconsole.log(mainButton.isVisible); // false  \n")),(0,i.kt)("h2",{id:"displaying-loader"},"Displaying loader"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Show main button loader.  \nmainButton.showProgress();\nconsole.log(mainButton.isProgressVisible); // true  \n\n// Hide main button loader.  \nmainButton.hideProgress();\nconsole.log(mainButton.isProgressVisible); // false\n")),(0,i.kt)("h2",{id:"colors"},"Colors"),(0,i.kt)("h3",{id:"color--setcolorcolor-rgb"},(0,i.kt)("inlineCode",{parentName:"h3"},"color")," / ",(0,i.kt)("inlineCode",{parentName:"h3"},"setColor(color: RGB)")),(0,i.kt)("p",null,"Button background color."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.setColor('#ffffaa');\nconsole.log(mainButton.color); // '#ffffaa'\n")),(0,i.kt)("h3",{id:"textcolor--settextcolorcolor-rgb"},(0,i.kt)("inlineCode",{parentName:"h3"},"textColor")," / ",(0,i.kt)("inlineCode",{parentName:"h3"},"setTextColor(color: RGB)")),(0,i.kt)("p",null,"Button text color."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.setTextColor('#cca233');\nconsole.log(mainButton.textColor); // '#cca233'\n")),(0,i.kt)("h2",{id:"enable-state"},"Enable state"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Enable button.  \nmainButton.enable();\nconsole.log(mainButton.isActive); // true  \n\n// Disable button.  \nmainButton.disable();\nconsole.log(mainButton.isActive); // false\n")),(0,i.kt)("p",null,"Enabling main button will allow user to click it. As a result, main button\nwill receive ",(0,i.kt)("inlineCode",{parentName:"p"},"click")," event. Otherwise, no event will be received."),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("p",null,"Events available for ",(0,i.kt)("a",{parentName:"p",href:"../about#events"},"listening"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"activeChanged: (isActive: boolean) => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"click: () => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"colorChanged: (color: RGB) => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"progressVisibleChanged: (isVisible: boolean) => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"textChanged: (text: string) => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"textColorChanged: (color: RGB) => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"visibleChanged: (isVisible: boolean) => void"))))}u.isMDXComponent=!0}}]);